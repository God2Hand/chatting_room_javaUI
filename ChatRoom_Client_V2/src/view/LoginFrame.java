/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import dao.Client;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.net.Inet4Address;
import java.net.UnknownHostException;
import javax.swing.JOptionPane;
import util.TrimUtil;
import util.UiUtil;

/**
 * 这是用户端刚打开的界面。输入用户名、服务器地址、端口号。
 *      登陆成功后就没它什么事了。。。
 * @author Shinelon
 */
public class LoginFrame extends javax.swing.JFrame {
    private String ip = null;//由于netbeans限制，这里做个寄存变量：服务器主机的ip地址
    
    private Client client;

    /**
     * Creates new form ClientLoginFrame
     * @param client
     */
    public LoginFrame(Client client) {
        this.client = client;
        getLocalHostIp();//得到本地ip地址
        UiUtil.beautiful();//适应平台界面
        initComponents();
        init();//自己的初始化方法
        enter_listen();//按确定键进入
    }
    
    private void getLocalHostIp(){
        try {
            ip = (String)Inet4Address.getLocalHost().getHostAddress();
        } catch (UnknownHostException e) {
            e.printStackTrace();
        }
    }
     
    //自己的初始化方法
    private void init() {
        this.setTitle("聊天室");//设置窗体标题
        UiUtil.setFrameImage(this, "socket.jpg");//设置图标
        this.setResizable(false);//设置界面大小不可调
        UiUtil.setFrameCenter(this);//设置界面居中
        addWindowListener(new WindowAdapter() {//设置窗体关闭
           @Override
           public void windowClosing(WindowEvent e) {
               jbt_exit.doClick();
           } 
        });
    }
    
    //加监听器，enter登录
    private void enter_listen() {
        KeyAdapter ka = new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if(e.getKeyChar()==KeyEvent.VK_ENTER) {
                    jbt_enter.doClick();
                }
            }
        };
        jtf_ip.addKeyListener(ka);
        jtf_port.addKeyListener(ka);
        jtf_username.addKeyListener(ka); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtf_username = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtf_ip = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtf_port = new javax.swing.JTextField();
        jbt_enter = new javax.swing.JButton();
        jbt_exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jLabel1.setText("用户名：");

        jLabel2.setText("服务器地址：");

        jtf_ip.setText(this.ip);

        jLabel3.setText("端口号：");

        jtf_port.setText("5000");

        jbt_enter.setText("进入聊天室");
        jbt_enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_enterActionPerformed(evt);
            }
        });

        jbt_exit.setText("退出聊天室");
        jbt_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jbt_enter, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbt_exit))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jtf_username, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtf_ip, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                            .addComponent(jtf_port))))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jbt_enter, jbt_exit});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtf_username, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtf_ip)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtf_port, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbt_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbt_enter, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jbt_enter, jbt_exit});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //退出聊天室
    private void jbt_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_exitActionPerformed
        client.exitLogin(this);
    }//GEN-LAST:event_jbt_exitActionPerformed

    //进入聊天室
    private void jbt_enterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_enterActionPerformed
        String username = TrimUtil.trim(jtf_username.getText());
        ip = TrimUtil.trim(jtf_ip.getText());
        String port = TrimUtil.trim(jtf_port.getText());
        if (!username.equals("")) {
            if (!ip.equals("")) {
                if (!port.equals("")) {
                    String login_mess = client.login(username, ip, port);
                    if (login_mess.equals("true")) {
                        client.setIp(ip);
                        this.setVisible(false);
                        client.showChatFrame(username);//登陆成功
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(this, login_mess);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "服务器连接端口号不能为空！");
                }
            } else {
                JOptionPane.showMessageDialog(this, "服务器地址不能为空！");
            }
        } else {
            JOptionPane.showMessageDialog(this, "用户名不能为空！");
        }
    }//GEN-LAST:event_jbt_enterActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton jbt_enter;
    private javax.swing.JButton jbt_exit;
    private javax.swing.JTextField jtf_ip;
    private javax.swing.JTextField jtf_port;
    private javax.swing.JTextField jtf_username;
    // End of variables declaration//GEN-END:variables

}
